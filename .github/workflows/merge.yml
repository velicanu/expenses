name: master-tests

# on:
#   push:
#     branches:
#       - master

on: [push]

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
    steps:
    - uses: actions/checkout@v3
    - name: Set up ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      id: py
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v3
      id: cache
      with:
        path: venv
        key: ${{ runner.os }}-${{ steps.py.outputs.python-version }}-${{ hashFiles('requirements.txt') }}
    - name: Install dependencies unix
      if: |
        steps.cache.outputs.cache-hit != 'true'
        &&  matrix.os != 'windows-latest'
      run: |
        python -m venv venv && source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
    - name: Install dependencies windows
      if: |
        steps.cache.outputs.cache-hit != 'true'
        &&  matrix.os == 'windows-latest'
      run: |
        python -m venv venv
        venv\Scripts\activate
        pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test on ubuntu and macOS
      run: |
        source venv/bin/activate
        pytest .
      if: matrix.os != 'windows-latest'
    - name: Test with nose on ubuntu and macOS
      run: |
        venv\Scripts\activate
        pytest . -m "not fails_on_windows"
      if: matrix.os == 'windows-latest'
